opendaylight-alto
=================

ALTO integration into ODL (alto/odl)

Overall Structure:
--model-alto contains YANG typedef and groupings, which maps to data types and builders in java. Almost everything in this directory is automatically generated by ODL.
--alto-provider is the alto server implementation (actually just a MD-SAL component). The key java file is the OpendaylightAlto class [https://github.com/shixiao/opendaylight-alto/blob/master/alto-provider/src/main/java/org/opendaylight/yang/gen/v1/urn/opendaylight/alto/provider/impl/rev141119/OpendaylightAlto.java].

Functionality implemented:
--Restconf retrieval of alto data, i.e. full map services.
--Rpc is wired (in terms of integrating into ODL architecture), but so far the repo only has a dummy implementation of filtered network map service.

TODOs:
--Datastore: currently alto/odl uses the transactional DOM datastore in ODL. It is unclear where the resource discovery code should fit in.
--IRD service
--Bug in rpc: "unhandled parameter types (endpoint-prefix, null)" -- didn't have time to track it down.
{
    "errors": {
        "error": [
            {
                "error-type": "protocol",
                "error-tag": "invalid-value",
                "error-message": "Unhandled parameter types: [(urn:opendaylight:alto?revision=2014-11-19)endpoint-prefix, null]"
            }
        ]
    }
}

Notes:
--current ODL restconf API uses an outdated restconf API: https://tools.ietf.org/html/draft-bierman-netconf-restconf-02

References:
YANG tools API:
https://jenkins.opendaylight.org/controller/job/controller-merge/lastSuccessfulBuild/artifact/target/apidocs/index.html
